version: '3'

services:
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
  loki:
    image: grafana/loki:2.3.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki.yaml
    volumes:
      - $PWD/loki/loki.yaml:/etc/loki/loki.yaml
  promtail:
    image: grafana/promtail:master
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers
      - /var/log:/var/log
      - $PWD/promtail/config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - type: bind
        source: $PWD/prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    restart: unless-stopped
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - $PWD/tempo/tempo.yaml:/etc/tempo.yaml
      - $PWD/tempo/tempo-data:/tmp/tempo
    ports:
      - "14268" # jaeger ingest
      - "3200:3200"
      - "55680" # otlp grpc
      - "55681" # otlp http
      - "9411" # zipkin   collector:
  collector:
    image: otel/opentelemetry-collector:0.23.0
    container_name: collector
    command: "--config /etc/otel-config.yaml"
    volumes:
      - $PWD/collector/otel-config.yaml:/etc/otel-config.yaml
  application:
    network_mode: "host"
    build:
      context: ./example/app
      dockerfile: Dockerfile
    container_name: app
    # logging:
    #   driver: json-file
    #   options:
    #     tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"
networks:
  grafana-labs:
    driver: bridge
